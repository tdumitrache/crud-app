{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Theodor\\\\Desktop\\\\crud-app\\\\client\\\\src\\\\pages\\\\Tabel.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Container, Table, Thead, Tbody, Tr, Th, Td, Button, Flex } from \"@chakra-ui/react\";\nimport { useParams } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tabel = () => {\n  _s();\n\n  const {\n    tabelaId\n  } = useParams();\n  const [list, setList] = useState([{}]);\n  const [ids, setIds] = useState([]);\n  useEffect(() => {\n    Axios.get(`http://localhost:3001/${tabelaId}`).then(res => setList(res.data));\n  }, []);\n\n  const handleToggleCheckbox = e => {\n    if (ids.indexOf(Number(e.target.value)) === -1) {\n      setIds([...ids, Number(e.target.value)]);\n    } else {\n      setIds(ids.filter(id => id !== Number(e.target.value)));\n    }\n  };\n\n  const deleteSelectedElements = () => {\n    ids.forEach(id => {\n      Axios.delete(`http://localhost:3001/delete/${tabelaId}/${id}`);\n    });\n    tabelaId === \"students\" ? setList(list.filter(row => ids.indexOf(row.id_student) === -1)) : tabelaId === \"departments\" ? setList(list.filter(row => ids.indexOf(row.id_department) === -1)) : setList(list.filter(row => ids.indexOf(row.id_meeting) === -1));\n    setIds([]);\n    const checkBoxes = document.getElementsByClassName(\"checkbox\");\n\n    for (let i = 0; i <= checkBoxes.length; i++) {\n      checkBoxes[i].checked = false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"1250px\",\n    mx: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      variant: \"simple\",\n      bg: \"#fff\",\n      padding: \"12px\",\n      mt: \"24px\",\n      borderRadius: \"18px\",\n      boxShadow: \"rgb(0 0 0 / 2%) 0px 3.5px 5.5px\",\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          py: \"20px\",\n          children: list.length && Object.keys(list[0]).map((thead, index) => {\n            return /*#__PURE__*/_jsxDEV(Th, {\n              fontFamily: \"Plus Jakarta Display\",\n              fontSize: \"18px\",\n              py: \"24px\",\n              children: thead\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: list.map(row => {\n          return /*#__PURE__*/_jsxDEV(Tr, {\n            borderRadius: \"20px\",\n            children: list.length && Object.values(row).map((td, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: index === 0 ? /*#__PURE__*/_jsxDEV(Td, {\n                  display: \"flex\",\n                  align: \"center\",\n                  py: \"24px\",\n                  fontWeight: \"500\",\n                  borderBottom: \"none\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      className: \"checkbox\",\n                      value: td,\n                      onChange: e => handleToggleCheckbox(e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"checkmark\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 29\n                  }, this), td]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(Td, {\n                  fontWeight: \"500\",\n                  borderBottom: \"none\",\n                  children: td\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"solid\",\n      colorScheme: \"blue\",\n      w: \"fit-content\",\n      mx: \"auto\",\n      mt: \"24px\",\n      onClick: deleteSelectedElements,\n      children: \"\\u0218terge elementele selectate!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tabel, \"6ZDzDp4xzd5bnYoRoYQBjZnNtgY=\", false, function () {\n  return [useParams];\n});\n\n_c = Tabel;\nexport default Tabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabel\");","map":{"version":3,"sources":["C:/Users/Theodor/Desktop/crud-app/client/src/pages/Tabel.jsx"],"names":["useEffect","useState","Container","Table","Thead","Tbody","Tr","Th","Td","Button","Flex","useParams","Axios","Tabel","tabelaId","list","setList","ids","setIds","get","then","res","data","handleToggleCheckbox","e","indexOf","Number","target","value","filter","id","deleteSelectedElements","forEach","delete","row","id_student","id_department","id_meeting","checkBoxes","document","getElementsByClassName","i","length","checked","Object","keys","map","thead","index","values","td"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Button,\r\n  Flex,\r\n} from \"@chakra-ui/react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nconst Tabel = () => {\r\n  const { tabelaId } = useParams();\r\n\r\n  const [list, setList] = useState([{}]);\r\n  const [ids, setIds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(`http://localhost:3001/${tabelaId}`).then((res) =>\r\n      setList(res.data)\r\n    );\r\n  }, []);\r\n\r\n  const handleToggleCheckbox = (e) => {\r\n    if (ids.indexOf(Number(e.target.value)) === -1) {\r\n      setIds([...ids, Number(e.target.value)]);\r\n    } else {\r\n      setIds(ids.filter((id) => id !== Number(e.target.value)));\r\n    }\r\n  };\r\n\r\n  const deleteSelectedElements = () => {\r\n    ids.forEach((id) => {\r\n      Axios.delete(`http://localhost:3001/delete/${tabelaId}/${id}`);\r\n    });\r\n    tabelaId === \"students\"\r\n      ? setList(list.filter((row) => ids.indexOf(row.id_student) === -1))\r\n      : tabelaId === \"departments\"\r\n      ? setList(list.filter((row) => ids.indexOf(row.id_department) === -1))\r\n      : setList(list.filter((row) => ids.indexOf(row.id_meeting) === -1));\r\n    \r\n    setIds([]);\r\n\r\n    const checkBoxes = document.getElementsByClassName(\"checkbox\");\r\n    for (let i = 0; i <= checkBoxes.length; i++) {\r\n      checkBoxes[i].checked = false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"1250px\"\r\n      mx=\"auto\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justify=\"center\"\r\n    >\r\n      <Table variant=\"simple\" bg=\"#fff\" padding=\"12px\" mt=\"24px\" borderRadius=\"18px\" boxShadow=\"rgb(0 0 0 / 2%) 0px 3.5px 5.5px\">\r\n        <Thead >\r\n          <Tr py=\"20px\">\r\n            {list.length &&\r\n              Object.keys(list[0]).map((thead, index) => {\r\n                return (\r\n                  <Th key={index} fontFamily=\"Plus Jakarta Display\" fontSize=\"18px\" py=\"24px\">\r\n                    {thead}\r\n                  </Th>\r\n                );\r\n              })}\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody >\r\n          {list.map((row) => {\r\n            return (\r\n              <Tr borderRadius=\"20px\">\r\n                {list.length &&\r\n                  Object.values(row).map((td, index) => {\r\n                    return (\r\n                      <>\r\n                        {index === 0 ? (\r\n                          <Td display=\"flex\" align=\"center\" py=\"24px\" fontWeight=\"500\" borderBottom=\"none\">\r\n                            <label className=\"container\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"checkbox\"\r\n                                value={td}\r\n                                onChange={(e) => handleToggleCheckbox(e)}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                            </label>\r\n                            {td}\r\n                          </Td>\r\n                        ) : (\r\n                          <Td key={index} fontWeight=\"500\" borderBottom=\"none\">{td}</Td>\r\n                        )}\r\n                      </>\r\n                    );\r\n                  })}\r\n              </Tr>\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"blue\"\r\n        w=\"fit-content\"\r\n        mx=\"auto\"\r\n        mt=\"24px\"\r\n        onClick={deleteSelectedElements}\r\n      >\r\n        Șterge elementele selectate!\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Tabel;\r\n"]},"metadata":{},"sourceType":"module"}